<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AntRunner.Interface</name>
    </assembly>
    <members>
        <member name="T:AntRunner.Interface.Ant">
            <summary>
            Base class for every ant, inherit from this class to create an ant.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.Ant.Name">
            <summary>
            Readonly property for the name of the ant.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.Ant.FlagResource">
            <summary>
            Overridable string to return the name of an embedded resource for use the ant's Flag
            </summary>
        </member>
        <member name="P:AntRunner.Interface.Ant.Flag">
            <summary>
            Overridable Stream to return binary data for use by BitmapFrame.Create() of the ant's Flag.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Ant.Action">
            <summary>
            Action which will be performed for the end of the current tick cycle. Will be set to Wait after being read.
            </summary>
        </member>
        <member name="M:AntRunner.Interface.Ant.Initialize(System.Int32,System.Int32,AntRunner.Interface.ItemColor,System.Int32,System.Int32)">
            <summary>
            Initialize method called once before the start of each game.
            </summary>
            <param name="mapWidth">The total width of the map.</param>
            <param name="mapHeight">The total height of the map.</param>
            <param name="antColor">The color the ant was assigned.</param>
            <param name="startX">The X coordinate value where the ant starts.</param>
            <param name="startY">The Y coordinate value where the ant starts.</param>
        </member>
        <member name="M:AntRunner.Interface.Ant.Tick(AntRunner.Interface.GameState)">
            <summary>
            Method called to begin processing for each turn.
            </summary>
            <param name="state">GameState object of relevant information that occurred as a result of the GameActions of the previous Tick.</param>
        </member>
        <member name="T:AntRunner.Interface.AntAction">
            <summary>
            Enum of available actions an ant can make per tick.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.Wait">
            <summary>
            Ant does nothing.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.MoveRight">
            <summary>
            Ant attempts to move one space to the right.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.MoveDown">
            <summary>
            Ant attempts to move one space below.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.MoveLeft">
            <summary>
            Ant attempts to move one space to the left.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.MoveUp">
            <summary>
            Ant attempts to move one space above.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.EchoRight">
            <summary>
            Ant performs an echo to the right. The response will come in the GameState of the next Tick() call.
            See <see cref="T:AntRunner.Interface.EchoResponse"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.EchoDown">
            <summary>
            Ant performs an echo below. The response will come in the GameState of the next Tick() call.
            See <see cref="T:AntRunner.Interface.EchoResponse"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.EchoLeft">
            <summary>
            Ant performs an echo to the left. The response will come in the GameState of the next Tick() call.
            See <see cref="T:AntRunner.Interface.EchoResponse"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.EchoUp">
            <summary>
            Ant performs an echo above. The response will come in the GameState of the next Tick() call.
            See <see cref="T:AntRunner.Interface.EchoResponse"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShieldOn">
            <summary>
            Ant turns on its shield if it has any.
            For every 4 ticks the shield is on, it will lose 1 point.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShieldOff">
            <summary>
            Ant turns off its shield.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.DropBomb">
            <summary>
            Ant drops a bomb at the current position if it has any.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShootRight">
            <summary>
            Ant shoot its laser in a straight line to the right.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShootDown">
            <summary>
            Ant shoot its laser in a straight line below.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShootLeft">
            <summary>
            Ant shoot its laser in a straight line to the left.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.AntAction.ShootUp">
            <summary>
            Ant shoot its laser in a straight line above.
            </summary>
        </member>
        <member name="T:AntRunner.Interface.AssemblyLoaderData">
            <summary>
            Class containing data needed to load an ant.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.AssemblyLoaderData.TypeString">
            <summary>
            String of the full name of the ant class.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.AssemblyLoaderData.AssemblyName">
            <summary>
            AssemblyName information of the assembly containing the ant class.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.AssemblyLoaderData.ConstructorParameters">
            <summary>
            Object array of the parameters needed for the ant constructor.
            </summary>
        </member>
        <member name="T:AntRunner.Interface.DamageValues">
            <summary>
            Static class of constant values used when assigning damage to an ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.DamageValues.Collision">
            <summary>
            Damage applied when an ant runs into an object.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.DamageValues.Impact">
            <summary>
            Damage applied when an ant is run into or rammed by another ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.DamageValues.Shot">
            <summary>
            Damage applied when an ant is shot with a laser.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.DamageValues.Bomb">
            <summary>
            Damage applied when an ant steps on a bomb.
            </summary>
        </member>
        <member name="T:AntRunner.Interface.EchoResponse">
            <summary>
            Response item when an Echo action is made.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.EchoResponse.Distance">
            <summary>
            How many squares away is the item.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.EchoResponse.Item">
            <summary>
            What item is there.
            </summary>
        </member>
        <member name="M:AntRunner.Interface.EchoResponse.#ctor(System.Int32,AntRunner.Interface.Item)">
            <summary>
            Response item when an Echo action is made.
            </summary>
            <param name="distance">How many squares away is the item.</param>
            <param name="item">What item is there.</param>
        </member>
        <member name="T:AntRunner.Interface.GameEvent">
            <summary>
            Enum flags of possible events that can occur as a result of all ants' GameAction. Multiple events may occur at once.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.Nothing">
            <summary>
            Nothing has occurred.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.CollisionDamage">
            <summary>
            Ant ran into an object when it attempted to move and incurred damage.  The move was unsuccessful and the ant remains at its current location.
            See <see cref="F:AntRunner.Interface.DamageValues.Collision"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ImpactDamageRight">
            <summary>
            Another ant ran into or rammed the ant from the right and incurred damage.
            See <see cref="F:AntRunner.Interface.DamageValues.Impact"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ImpactDamageDown">
            <summary>
            Another ant ran into or rammed the ant from below and incurred damage.
            See <see cref="F:AntRunner.Interface.DamageValues.Impact"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ImpactDamageLeft">
            <summary>
            Another ant ran into or rammed the ant from the left and incurred damage.
            See <see cref="F:AntRunner.Interface.DamageValues.Impact"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ImpactDamageUp">
            <summary>
            Another ant ran into or rammed the ant from above and incurred damage.
            See <see cref="F:AntRunner.Interface.DamageValues.Impact"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ShotDamageRight">
            <summary>
            Ant was shot by a laser and incurred damage from the right.
            See <see cref="F:AntRunner.Interface.DamageValues.Shot"/>
            </summary>
            
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ShotDamageDown">
            <summary>
            Ant was shot by a laser and incurred damage from below.
            See <see cref="F:AntRunner.Interface.DamageValues.Shot"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ShotDamageLeft">
            <summary>
            Ant was shot by a laser and incurred damage from the left.
            See <see cref="F:AntRunner.Interface.DamageValues.Shot"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.ShotDamageUp">
            <summary>
            Ant was shot by a laser and incurred damage from above.
            See <see cref="F:AntRunner.Interface.DamageValues.Shot"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.BombDamage">
            <summary>
            Ant walked over a bomb and incurred damage.
            See <see cref="F:AntRunner.Interface.DamageValues.Bomb"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.PickUpBomb">
            <summary>
            Ant picked up a Bomb Power-up.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Bomb"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.PickUpShield">
            <summary>
            Ant picked up a Shield Power-up.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Shield"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.PickUpHealth">
            <summary>
            Ant picked up a Health Power-up.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Health"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.PickUpFlag">
            <summary>
            Ant picked up the Flag. Run to the correct color home!
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.Dead">
            <summary>
            Ant has died and will no longer be getting Tick() calls.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.GameEvent.GameOver">
            <summary>
            The game is over, either an ant successfully retrieved the flag or all ants have died.
            </summary>
        </member>
        <member name="T:AntRunner.Interface.GameState">
            <summary>
            Ant specific information about the current state of the game and what occurred in the previous tick.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.TickNumber">
            <summary>
            Long value of the tick turn, starts with 0 and each Tick() call is increased by 1.
            See <see cref="M:AntRunner.Interface.Ant.Tick(AntRunner.Interface.GameState)"/>
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.HasFlag">
            <summary>
            Boolean value if an ant has the flag.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.FlagX">
            <summary>
            If an ant has the flag, this is their current X position on the map. If no ants have the flag then this value is -1.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.FlagY">
            <summary>
            If an ant has the flag, this is their current Y position on the map. If no ants have the flag then this value is -1.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.AntWithFlag">
            <summary>
            If an ant has the flag, this is the color of that ant. If no ants have the flag then this value is ItemColor.None.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.Response">
            <summary>
            Echo response of the previous Tick GameAction. If previous Tick was not an echo action then this is null.
            See <see cref="F:AntRunner.Interface.AntAction.EchoRight"/>
            <seealso cref="F:AntRunner.Interface.AntAction.EchoLeft"/>
            <seealso cref="F:AntRunner.Interface.AntAction.EchoUp"/>
            <seealso cref="F:AntRunner.Interface.AntAction.EchoDown"/>
            </summary>
        </member>
        <member name="P:AntRunner.Interface.GameState.Event">
            <summary>
            Flag enum of which events occurred due to the previous Tick() GameAction.
            </summary>
        </member>
        <member name="M:AntRunner.Interface.GameState.#ctor(System.Int64)">
            <summary>
            Constructor when there is no GameEvent, meaning nothing happened.
            </summary>
            <param name="tickNumber">Tick number of the current Tick cycle.</param>
        </member>
        <member name="M:AntRunner.Interface.GameState.#ctor(System.Int64,System.Int32,System.Int32,AntRunner.Interface.ItemColor)">
            <summary>
            Constructor when an ant has the flag.
            </summary>
            <param name="tickNumber">Tick number of the current Tick cycle.</param>
            <param name="flagX">The current X position on the map of the ant with the flag.</param>
            <param name="flagY">The current Y position on the map of the ant with the flag.</param>
            <param name="antWithFlag">The ItemColor of the ant with the flag.</param>
        </member>
        <member name="M:AntRunner.Interface.GameState.#ctor(AntRunner.Interface.GameState,AntRunner.Interface.GameEvent,AntRunner.Interface.EchoResponse)">
            <summary>
            Constructor for a personalized GameState for each ant.
            </summary>
            <param name="state">General GameState object to copy values.</param>
            <param name="event">Flag enum of which events occurred due to the previous Tick() GameAction.</param>
            <param name="response">Echo response of the previous Tick GameAction. If previous Tick was not an echo action then this is null.</param>
        </member>
        <member name="T:AntRunner.Interface.Item">
            <summary>
            Enum of possible items on a map position.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.Empty">
            <summary>
            Nothing at all, aka empty.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.SteelWall">
            <summary>
            Unbreakable steel wall.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.BrickWall">
            <summary>
            Brick wall which may be destroyed with a laser shot.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.Bomb">
            <summary>
            Bomb that will damage the ant if stepped on. Can be shot with the laser to destroy
            See <see cref="F:AntRunner.Interface.DamageValues.Bomb"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.PowerUpBomb">
            <summary>
            Bomb Power-up, adds bombs to the ant's inventory.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Bomb"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.PowerUpHealth">
            <summary>
            Health Power-up, adds more health level to the ant, maximum 100.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Health"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.PowerUpShield">
            <summary>
            Shield Power-up, adds more shield level to the ant, maximum 100.
            See <see cref="F:AntRunner.Interface.ItemBonusValues.Shield"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.RedAnt">
            <summary>
            The red ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.BlueAnt">
            <summary>
            The blue ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.GreenAnt">
            <summary>
            The green ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.OrangeAnt">
            <summary>
            The orange ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.PinkAnt">
            <summary>
            The pink ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.YellowAnt">
            <summary>
            The yellow ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.GrayAnt">
            <summary>
            The gray ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.WhiteAnt">
            <summary>
            The white ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.RedHome">
            <summary>
            The home for the red ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.BlueHome">
            <summary>
            The home for the blue ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.GreenHome">
            <summary>
            The home for the green ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.OrangeHome">
            <summary>
            The home for the orange ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.PinkHome">
            <summary>
            The home for the pink ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.YellowHome">
            <summary>
            The home for the yellow ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.GrayHome">
            <summary>
            The home for the gray ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.WhiteHome">
            <summary>
            The home for the white ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.Item.Flag">
            <summary>
            The flag, pick this up and bring it to the correct color home.
            </summary>
        </member>
        <member name="T:AntRunner.Interface.ItemBonusValues">
            <summary>
            Static class of constant values used when assigning power-ups to an ant.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.ItemBonusValues.Health">
            <summary>
            Amount of health that is restored when a health power-up is acquired.
            See <see cref="F:AntRunner.Interface.Item.PowerUpHealth"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.ItemBonusValues.Shield">
            <summary>
            Amount of shield that is restored when a shield power-up is acquired.
            See <see cref="F:AntRunner.Interface.Item.PowerUpShield"/>
            </summary>
        </member>
        <member name="F:AntRunner.Interface.ItemBonusValues.Bomb">
            <summary>
            Amount of bombs added to an ant's inventory when a bomb power-up is acquired.
            See <see cref="F:AntRunner.Interface.Item.PowerUpBomb"/>
            </summary>
        </member>
        <member name="T:AntRunner.Interface.ItemColor">
            <summary>
            Enum of the available ant and home colors.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.None">
            <summary>
            No color at all.
            </summary>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Red">
            <summary>
            Color for the RedAnt and RedHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.RedAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.RedHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Blue">
            <summary>
            Color for the BlueAnt and BlueHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.BlueAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.BlueHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Green">
            <summary>
            Color for the GreenAnt and GreenHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.GreenAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.GreenHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Orange">
            <summary>
            Color for the OrangeAnt and OrangeHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.OrangeAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.OrangeHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Pink">
            <summary>
            Color for the PinkAnt and PinkHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.PinkAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.PinkHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Yellow">
            <summary>
            Color for the YellowAnt and YellowHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.YellowAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.YellowHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.Gray">
            <summary>
            Color for the GrayAnt and GrayHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.GrayAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.GrayHome"/>
        </member>
        <member name="F:AntRunner.Interface.ItemColor.White">
            <summary>
            Color for the WhiteAnt and WhiteHome
            </summary>
            See <see cref="F:AntRunner.Interface.Item.WhiteAnt"/>
            <seealso cref="F:AntRunner.Interface.Item.WhiteHome"/>
        </member>
        <member name="T:AntRunner.Interface.IWrapperLoader">
            <summary>
            Wrapper to make custom loaders for different programming languages.
            </summary>
        </member>
        <member name="P:AntRunner.Interface.IWrapperLoader.Extension">
            <summary>
            The extension this file type can open.
            </summary>
        </member>
        <member name="M:AntRunner.Interface.IWrapperLoader.MakeLoaderData(System.String)">
            <summary>
            Returns all information needed to load an ant in it's own AppDomain
            </summary>
            <param name="filename">Path to the file to load.</param>
            <returns>AssemblyLoaderData with all information for loading an ant.</returns>
        </member>
    </members>
</doc>
